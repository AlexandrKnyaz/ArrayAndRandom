package ru.geekbrains.javacore;

import java.util.Arrays;
import java.util.Random;

public class Main {

    public static void main(String[] args) {
        //task2();
    }

    public static void task1(){
        /*
        Создать массив на 5 элементов и заполнить его случайными числами в диапазоне от 5 до 50
        Создать второй массив и с помощью цикла переписать во второй массив числа, которые больше 25.
        Размер второго массива должен быть равен количеству чисел, подходящих под это условие.
         */
        Random random = new Random();
        int[] arr1 = new int[5];
        int i;
        for(i = 0; i < arr1.length; i++){
            arr1[i] = random.nextInt(46) + 5;
        }
        System.out.println(Arrays.toString(arr1));


        int size = 0;
        for (i = 0; i < arr1.length; i++) {
            if(arr1[i] > 25){
               size++;
            }
        }
        //6 8 50
        int[] arr2 = new int[size];
        int index=0;
        for (i = 0; i < arr1.length; i++) {
            if(arr1[i] > 25){
                arr2[index] = arr1[i];
                index++;
            }
        }

        System.out.println(Arrays.toString(arr2));


    }

    public static void task2(){
        /*
        Сгенерировать случайное число n в диапазоне от 100 до 1000.
        Создать массив на n элементов и заполнить его случайными числами в диапазоне от 10 до 100.
        Найдите середину у данного массива и возьмите интервал в 10 чисел слева от середины и 10 чисел справа от середины.
        Создайте второй массив и запишите в него числа из этого интервала, где значения чисел лежат в диапазоне от 20 до 80.

        Рассмотим это задачу на примере из 10 чисел и интервале в 2 числа слева и справа от середины. Массив содержит следующие 10 чисел :
        10 15 8 20 25 78 100 18 9 12.
        Серединой данного массива является 5-й элемент. Он равен 25.
        В качестве интервала возьмем два числа слева и справа от середины.
        ПОлучим следующие числа:
        8 20 25 78 100
        В этом интервале найдем числа, значения которых лежат в диапазоне от 20 до 80.
        Это числа 20, 25, 78.
        Получается, новый массив должен быть размером 3. И содержать данные числа.
        Ну, там надо два цикла
        Или один
        До начала цикла надо определить середину массива
        Отнять от неё 10 - левая граница
        И прибавить к середине 10 - правая граница
        Теперь можно создать цикл от левой до правой границы
        В цикле надо найти элементы больше 20 и меньше 80
        Для них надо создать массив. Посколько количество этих чисел заранее не знаем, сначала надо посчитать их количество в этом цикле
        Когда посчитаешь, то завершаешь цикл, после него создаёшь массив на это количество и открываешь новый цикл
        В котором в этот массив записываешься числа из исходного
        В этом цикле надо будет повнимательнее с индексами, потому что в старом массиве у первого элемента индекс будет (середина массива - 10), а в новом индекс будет 0
        И поэтому здесь может быть выход за границы массива, если это не учесть
        И все Потом нужно будет вывести полученный массив для проверки
         */
        Random random = new Random();
        int n = random.nextInt(901) + 100;
        int sizeCentre = 0;
        int size=0;
        int[] arr = new int[n];
        for(n = 0; n < arr.length; n++){
            arr[n] = random.nextInt(91) + 10;
        }
        System.out.println(Arrays.toString(arr));
        sizeCentre = arr.length / 2;
        int rightOfCentre = sizeCentre + 10;
        int leftOfCentre = sizeCentre - 10;

        for (int i = leftOfCentre; i <= rightOfCentre; i++){
            if(arr[i]>20 && arr[i] < 80){
                size++;
            }
        }

        int[] arr2 = new int[size];
        int index = 0;

        for(int i = leftOfCentre; i <= rightOfCentre; i++){
            if(arr[i] > 20 && arr[i] < 80){
                arr2[index] = arr[i];
                index++;
            }
        }
        System.out.println(Arrays.toString(arr2));

    }

}
